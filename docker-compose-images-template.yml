services:

#-------------- database instance-------------------
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    ports:
      - "3307:3306"
    networks:
      - bank-account-apis
    environment:
      MYSQL_ROOT_PASSWORD: root
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost", "-uroot", "-proot" ]
      interval: 5s
      timeout: 5s
      retries: 20
    volumes:
      - mysql_volume:/var/lib/mysql
  
# ---------------- utils microservices---------------------
  microservices-configuration-server:
    image: placidenduwayo1/microservices-configuration-server:1.0.0
    container_name: microservices-configuration-server
    build:
      context: ./backend/utils-microservices/microservices-configuration-server
      dockerfile: Dockerfile
    ports:
      - 8100:8100
    networks:
      - bank-account-apis
    healthcheck:
      test: [ "CMD", "curl", "-I", "http://microservices-configuration-server:8100" ]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: always
      
  microservices-registration-server:
    image: placidenduwayo1/microservices-registration-server:1.0.0
    container_name: microservices-registration-server
    build:
      context: ./backend/utils-microservices/microservices-registration-server
      dockerfile: Dockerfile
    depends_on:
      microservices-configuration-server:
        condition: service_healthy
    ports:
      - 8761:8761
    healthcheck:
      test: [ "CMD", "curl", "-I", "http://microservices-registration-server:8761" ]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - bank-account-apis
    restart: always

  gateway-service-proxy:
    image: placidenduwayo1/gateway-service-proxy:1.0.0
    container_name: gateway-service-proxy
    build:
      context: ./backend/utils-microservices/gateway-service-proxy
      dockerfile: Dockerfile
    ports:
      - 8101:8101
    depends_on:
      microservices-registration-server:
        condition: service_healthy
    networks:
      - bank-account-apis
    restart: always

# business microservices: customer, bank-account, operation
  business-microservice-customer:
    image: placidenduwayo1/business-microservice-customer:1.0.0
    container_name: business-microservice-customer
    build:
      context: ./backend/business-microservices/business-microservice-customer
      dockerfile: Dockerfile
    ports:
      - 8102:8102
    depends_on:
      mysql-db:
        condition: service_healthy
      microservices-registration-server:
        condition: service_healthy
    networks:
      - bank-account-apis
    restart: always

  business-microservice-bank-account:
    image: placidenduwayo1/business-microservice-bank-account:1.0.0
    container_name: business-microservice-bank-account
    build:
      context: ./backend/business-microservices/business-microservice-bankaccount
      dockerfile: Dockerfile
    ports:
      - 8103:8103
    depends_on:
      mysql-db:
        condition: service_healthy
      microservices-registration-server:
        condition: service_healthy
    networks:
      - bank-account-apis
    restart: always

  business-microservice-operation:
    image: placidenduwayo1/business-microservice-operation:1.0.0
    container_name: business-microservice-operation
    build:
      context: ./backend/business-microservices/business-microservice-operation
      dockerfile: Dockerfile
    ports:
      - 8104:8104
    depends_on:
      mysql-db:
        condition: service_healthy
      microservices-registration-server:
        condition: service_healthy
    networks:
      - bank-account-apis
    restart: always

networks:
  bank-account-apis:
volumes:
  mysql_volume: